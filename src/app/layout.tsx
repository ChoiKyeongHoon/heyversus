import "@/app/globals.css";

import { AuthApiError } from "@supabase/supabase-js";
import { Inter } from "next/font/google";
import { Toaster } from "sonner";

import Navbar from "@/components/layout/Navbar";
import { ThemeProvider } from "@/components/theme-provider";
import { createClient } from "@/lib/supabase/server";
import { QueryProvider } from "@/providers/QueryProvider";

const inter = Inter({
  subsets: ["latin"],
  display: "swap",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const supabase = await createClient();
  let session = null;
  try {
    const {
      data: { session: currentSession },
      error,
    } = await supabase.auth.getSession();

    if (error) {
      throw error;
    }

    session = currentSession;
  } catch (error) {
    if (error instanceof AuthApiError && error.code === "refresh_token_not_found") {
      // Supabase refresh 토큰 문제가 발생하면 세션을 초기화하고 쿠키를 비워 재시도를 유도한다.
      session = null;
      await supabase.auth.signOut().catch(() => undefined);
    } else {
      throw error;
    }
  }

  let profile = null;
  if (session) {
    const { data } = await supabase
      .from("profiles")
      .select("username, points, avatar_url")
      .eq("id", session.user.id)
      .single();
    profile = data;
  }

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${inter.className} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <QueryProvider>
            <Navbar session={session} profile={profile} />
            <h1 className="text-2xl md:text-3xl lg:text-4xl font-bold tracking-tighter mb-2 text-center mt-4 md:mt-6 lg:mt-8 px-4">
              <span className="text-brand-gold">Hey!</span>
              <span className="text-brand-orange"> Vote Here!!</span>
            </h1>
            {children}
            <Toaster position="bottom-center" />
          </QueryProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
